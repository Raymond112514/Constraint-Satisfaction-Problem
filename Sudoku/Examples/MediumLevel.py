from Sudoku.Sudoku import Sudoku

# Backtrack only: >5 min
# Backtrack + filter: 4-5 sec
# Backtrack + filter: <1 sec

problem= {
            (1, 1): 2, (1, 6): 7, (1, 7): 5,
            (2, 2): 6, (2, 3): 5, (2, 5): 1, (2, 9): 4,
            (3, 1): 7, (3, 5): 5,
            (4, 6): 6, (4, 7): 9, (4, 9): 3,
            (5, 1): 6, (5, 8): 7, (5, 9): 8,
            (6, 2): 7, (6, 3): 4, (6, 6): 1,
            (7, 4): 4, (7, 9): 1,
            (8, 1): 4, (8, 2): 3, (8, 3): 7, (8, 8): 9, (8, 9): 5,
            (9, 1): 9, (9, 3): 2, (9, 4): 5, (9, 5): 3, (9, 6): 8
        }

sudoku = Sudoku(3, problem)
sudoku.printAssignment()
result = sudoku.backtrackFilterMVF()
sudoku.printAssignment() if result is not None else print(result)

# Problem
# ---------------------------------------------
# - 2 --   --   --   --   -- 7 -- 5 --   --   -
# ---------------------------------------------
# -   -- 6 -- 5 --   -- 1 --   --   --   -- 4 -
# ---------------------------------------------
# - 7 --   --   --   -- 5 --   --   --   --   -
# ---------------------------------------------
# -   --   --   --   --   -- 6 -- 9 --   -- 3 -
# ---------------------------------------------
# - 6 --   --   --   --   --   --   -- 7 -- 8 -
# ---------------------------------------------
# -   -- 7 -- 4 --   --   -- 1 --   --   --   -
# ---------------------------------------------
# -   --   --   -- 4 --   --   --   --   -- 1 -
# ---------------------------------------------
# - 4 -- 3 -- 7 --   --   --   --   -- 9 -- 5 -
# ---------------------------------------------
# - 9 --   -- 2 -- 5 -- 3 -- 8 --   --   --   -
# ---------------------------------------------

# Solution
# ---------------------------------------------
# - 2 -- 4 -- 3 -- 6 -- 8 -- 7 -- 5 -- 1 -- 9 -
# ---------------------------------------------
# - 8 -- 6 -- 5 -- 9 -- 1 -- 3 -- 7 -- 2 -- 4 -
# ---------------------------------------------
# - 7 -- 9 -- 1 -- 2 -- 5 -- 4 -- 3 -- 8 -- 6 -
# ---------------------------------------------
# - 1 -- 5 -- 8 -- 7 -- 2 -- 6 -- 9 -- 4 -- 3 -
# ---------------------------------------------
# - 6 -- 2 -- 9 -- 3 -- 4 -- 5 -- 1 -- 7 -- 8 -
# ---------------------------------------------
# - 3 -- 7 -- 4 -- 8 -- 9 -- 1 -- 6 -- 5 -- 2 -
# ---------------------------------------------
# - 5 -- 8 -- 6 -- 4 -- 7 -- 9 -- 2 -- 3 -- 1 -
# ---------------------------------------------
# - 4 -- 3 -- 7 -- 1 -- 6 -- 2 -- 8 -- 9 -- 5 -
# ---------------------------------------------
# - 9 -- 1 -- 2 -- 5 -- 3 -- 8 -- 4 -- 6 -- 7 -
# ---------------------------------------------
